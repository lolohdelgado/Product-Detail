{"version":3,"sources":["img/amazonLogo.png","components/Header/Header.js","components/ProductDetail/ProductImage/ProductImage.js","components/ProductDetail/SelectColor/SelectColor.js","components/ProductDetail/FeaturesBtns/FeaturesBtn.js","components/ProductDetail/ScreenFeatures/ScreenFeatures.js","components/ProductDetail/ProductDetail.js","ProductData/ProductData.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","amazonLogo","alt","ProductImage","currentWatch","imageUrl","styleName","SelectColor","watchColorOptions","changeSelectedColor","selectedColor","map","index","onClick","FeaturesBtn","changeSeletedFeature","selectedFeature","type","ScreenFeatures","heartBeat","useMemo","Math","floor","random","date","Date","hourData","getHours","minutesData","getMinutes","ProductDetail","title","description","colorOptions","useState","ProductData","featureList","Object","freeze","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef56f7b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/amazonLogo.2c372da7.png\";","import amazonLogo from '../../img/amazonLogo.png';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='header'>\r\n            <img src={amazonLogo} alt='Amazon Logo'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","const ProductImage = ({currentWatch}) => (\r\n    <div className='productImage'>\r\n        <img src={currentWatch.imageUrl} alt={currentWatch.styleName}/>\r\n    </div>\r\n);\r\n\r\nexport default ProductImage;\r\n","const SelectColor = ({watchColorOptions, changeSelectedColor, selectedColor}) => {\r\n    \r\n    return (\r\n        <div className='differentColors'>\r\n            <h2>Select Color</h2>\r\n            {watchColorOptions.map(({ imageUrl, styleName }, index) => (\r\n                <button onClick={() => changeSelectedColor(index)} key={index} className={selectedColor === index ? 'color-selected' : ''}>\r\n                    <img src={imageUrl} alt={styleName}/>\r\n                </button>\r\n            ))} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectColor;\r\n","const FeaturesBtn = ({ changeSeletedFeature, selectedFeature }) => {\r\n    \r\n    return (\r\n        <div className='features'>\r\n            <h2>Features</h2>\r\n            <div>\r\n                <button onClick={() => changeSeletedFeature('hour')}  className={selectedFeature === 'hour'\r\n                ? 'feature-btn selected-btn' : 'feature-btn'} type='button'>Time</button>\r\n                <button onClick={() => changeSeletedFeature('heartBeat')}  className={selectedFeature === 'heartBeat'\r\n                ? 'feature-btn selected-btn' : 'feature-btn'} type='button\r\n                '>Heart Beat</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeaturesBtn;\r\n","import { useMemo } from 'react';\r\n\r\nconst ScreenFeatures = ({selectedFeature}) => {\r\n    const heartBeat = useMemo(() => Math.floor(Math.random()*60)+60, []);\r\n    const date = new Date();\r\n    let hourData = date.getHours() > 9 ? date.getHours() : '0' + date.getHours();\r\n    let minutesData = date.getMinutes() > 9 ? date.getMinutes() : '0' + date.getMinutes();\r\n\r\n    return (\r\n        <div className='screen-features'>\r\n            {selectedFeature === 'heartBeat' && (\r\n                <div className='heart-beat-data'>\r\n                    <i className=\"fas fa-heartbeat\"></i>\r\n                    <p>{heartBeat}</p>\r\n                    {/* span */}\r\n                </div>\r\n            )}\r\n            {selectedFeature === 'hour' && (\r\n                <div className='hour-data'>\r\n                <p>{hourData}:{minutesData}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScreenFeatures;\r\n","import ProductImage from './ProductImage/ProductImage';\r\nimport SelectColor from './SelectColor/SelectColor';\r\nimport FeaturesBtn from './FeaturesBtns/FeaturesBtn';\r\nimport ScreenFeatures from './ScreenFeatures/ScreenFeatures';\r\nimport { useState } from 'react';\r\n\r\nconst ProductDetail = ({title, description, colorOptions}) => {\r\n    const watchColorOptions = colorOptions; // todo\r\n    const [selectedColor, changeSelectedColor] = useState(0);\r\n    const [selectedFeature, changeSeletedFeature] = useState('hour');\r\n\r\n    return (\r\n        <div className='product-detail'>\r\n            <div className='image-container'>\r\n                <ProductImage currentWatch={watchColorOptions[selectedColor]} />\r\n                <ScreenFeatures selectedFeature={selectedFeature}/>\r\n            </div>\r\n            <div className='description-container'>\r\n                <h1 className='title'>{title}</h1>\r\n                <p className='description'>{description}</p>\r\n                <SelectColor changeSelectedColor={changeSelectedColor} watchColorOptions={watchColorOptions} selectedColor={selectedColor}/>\r\n                <FeaturesBtn changeSeletedFeature={changeSeletedFeature} selectedFeature={selectedFeature}/>\r\n                <button className='buy-button' type='button'>Buy Now</button>  \r\n            </div>              \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductDetail;\r\n","const ProductData = {\r\n    title: 'FitBit 19 - The Smartest Watch',\r\n    description: 'Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor.',\r\n    colorOptions: [\r\n        {\r\n            styleName: 'Black Strap',\r\n            imageUrl: 'https://imgur.com/iOeUBV7.png'\r\n        },\r\n        {\r\n            styleName: 'Red Strap',\r\n            imageUrl: 'https://imgur.com/PTgQlim.png'\r\n        },\r\n        {\r\n            styleName: 'Blue Strap',\r\n            imageUrl: 'https://imgur.com/Mplj1YR.png'\r\n        },\r\n        {\r\n            styleName: 'Purple Strap',\r\n            imageUrl: 'https://imgur.com/xSIK4M8.png'\r\n        },\r\n    ],\r\n    featureList: [\r\n        \"Time\", \"Heart Rate\"\r\n    ]\r\n}\r\n\r\nObject.freeze(ProductData); //This line of code just makes your object as a constant. No values can be updated.\r\n\r\nexport default ProductData;","import './App.scss';\nimport Header from './components/Header/Header';\nimport ProductDetail from './components/ProductDetail/ProductDetail';\nimport ProductData from './ProductData/ProductData'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <ProductDetail {...ProductData}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}